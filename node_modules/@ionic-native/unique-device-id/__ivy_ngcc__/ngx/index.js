import { __extends } from "tslib";
import { IonicNativePlugin, cordova } from '@ionic-native/core';
import { Injectable } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var UniqueDeviceID = /** @class */ (function (_super) {
    __extends(UniqueDeviceID, _super);
    function UniqueDeviceID() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UniqueDeviceID.prototype.get = function () { return cordova(this, "get", {}, arguments); };
    UniqueDeviceID.pluginName = "UniqueDeviceID";
    UniqueDeviceID.plugin = "cordova-plugin-uniquedeviceid";
    UniqueDeviceID.pluginRef = "window.plugins.uniqueDeviceID";
    UniqueDeviceID.repo = "https://github.com/Paldom/UniqueDeviceID";
    UniqueDeviceID.platforms = ["Android", "iOS", "Windows Phone 8"];
UniqueDeviceID.ɵfac = function UniqueDeviceID_Factory(t) { return ɵUniqueDeviceID_BaseFactory(t || UniqueDeviceID); };
UniqueDeviceID.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: UniqueDeviceID, factory: function (t) { return UniqueDeviceID.ɵfac(t); } });
var ɵUniqueDeviceID_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(UniqueDeviceID);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UniqueDeviceID, [{
        type: Injectable
    }], null, null); })();
    return UniqueDeviceID;
}(IonicNativePlugin));
export { UniqueDeviceID };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9AaW9uaWMtbmF0aXZlL3BsdWdpbnMvdW5pcXVlLWRldmljZS1pZC9uZ3gvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sOEJBQXNDLE1BQU0sb0JBQW9CLENBQUM7QUFDeEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFDM0M7QUFJUyxJQXdCMkIsa0NBQWlCO0FBQUM7QUFFOUI7QUFDYztBQUFNLElBRzFDLDRCQUFHO0FBSW1CO0FBQWtEO0FBQTZEO0FBQWdFO0FBQXNFO2tEQVg1USxVQUFVOzs7OzswQkFDTDtBQUFDLHlCQTlCUDtBQUFFLEVBOEJrQyxpQkFBaUI7QUFDcEQsU0FEWSxjQUFjO0FBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBAbmFtZSBVbmlxdWUgRGV2aWNlIElEXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoaXMgcGx1Z2luIHByb2R1Y2VzIGEgdW5pcXVlLCBjcm9zcy1pbnN0YWxsLCBhcHAtc3BlY2lmaWMgZGV2aWNlIGlkLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgVW5pcXVlRGV2aWNlSUQgfSBmcm9tICdAaW9uaWMtbmF0aXZlL3VuaXF1ZS1kZXZpY2UtaWQvbmd4JztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHVuaXF1ZURldmljZUlEOiBVbmlxdWVEZXZpY2VJRCkgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy51bmlxdWVEZXZpY2VJRC5nZXQoKVxuICogICAudGhlbigodXVpZDogYW55KSA9PiBjb25zb2xlLmxvZyh1dWlkKSlcbiAqICAgLmNhdGNoKChlcnJvcjogYW55KSA9PiBjb25zb2xlLmxvZyhlcnJvcikpO1xuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1VuaXF1ZURldmljZUlEJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tdW5pcXVlZGV2aWNlaWQnLFxuICBwbHVnaW5SZWY6ICd3aW5kb3cucGx1Z2lucy51bmlxdWVEZXZpY2VJRCcsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vUGFsZG9tL1VuaXF1ZURldmljZUlEJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJywgJ1dpbmRvd3MgUGhvbmUgOCddLFxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBVbmlxdWVEZXZpY2VJRCBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIEdldHMgYSB1bmlxdWUsIGNyb3NzLWluc3RhbGwsIGFwcC1zcGVjaWZpYyBkZXZpY2UgaWQuXG4gICAqIEByZXR1cm4ge1Byb21pc2U8c3RyaW5nPn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHNvbWV0aGluZyBoYXBwZW5zXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGdldCgpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19