import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordovaPropertyGet, cordovaPropertySet } from '@ionic-native/core';
import * as ɵngcc0 from '@angular/core';
var Uid = /** @class */ (function (_super) {
    __extends(Uid, _super);
    function Uid() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(Uid.prototype, "UUID", {
        get: function () { return cordovaPropertyGet(this, "UUID"); },
        set: function (value) { cordovaPropertySet(this, "UUID", value); },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Uid.prototype, "IMEI", {
        get: function () { return cordovaPropertyGet(this, "IMEI"); },
        set: function (value) { cordovaPropertySet(this, "IMEI", value); },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Uid.prototype, "IMSI", {
        get: function () { return cordovaPropertyGet(this, "IMSI"); },
        set: function (value) { cordovaPropertySet(this, "IMSI", value); },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Uid.prototype, "ICCID", {
        get: function () { return cordovaPropertyGet(this, "ICCID"); },
        set: function (value) { cordovaPropertySet(this, "ICCID", value); },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Uid.prototype, "MAC", {
        get: function () { return cordovaPropertyGet(this, "MAC"); },
        set: function (value) { cordovaPropertySet(this, "MAC", value); },
        enumerable: false,
        configurable: true
    });
    Uid.pluginName = "Uid";
    Uid.plugin = "cordova-plugin-uid";
    Uid.pluginRef = "cordova.plugins.uid";
    Uid.repo = "https://github.com/lionelhe/cordova-plugin-uid";
    Uid.platforms = ["Android"];
Uid.ɵfac = function Uid_Factory(t) { return ɵUid_BaseFactory(t || Uid); };
Uid.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Uid, factory: function (t) { return Uid.ɵfac(t); } });
var ɵUid_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(Uid);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Uid, [{
        type: Injectable
    }], null, null); })();
    return Uid;
}(IonicNativePlugin));
export { Uid };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9AaW9uaWMtbmF0aXZlL3BsdWdpbnMvdWlkL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLDZEQUE4QyxNQUFNLG9CQUFvQixDQUFDOztBQUNoRjtBQUlXLElBd0NjLHVCQUFpQjtBQUFDO0FBQ3hCO0FBRVY7QUFBTSwwQkFBYixxQkFBSTtBQUFJO0FBRXNEO0FBSTFDO0FBQTJCO0FBQzlDO0FBQVEsMEJBSFQscUJBQUk7QUFBSTtBQUVzRDtBQUluQztBQUEyQjtBQUN0QztBQUNiLDBCQUpILHFCQUFJO0FBQUk7QUFFc0Q7QUFJNUI7QUFDMUI7QUFFVDtBQUNNLDBCQU5MLHNCQUFLO0FBQUk7QUFHQztBQUd1QztBQUEyQjtBQUEyQjtBQUFRLDBCQUYvRyxvQkFBRztBQUFJO0FBRXFEO0FBQTJFO0FBQTJCO0FBQTJCO0FBQVE7QUFBNEI7QUFBdUM7QUFBMkM7QUFBaUU7dUNBdEJyWCxVQUFVOzs7OzswQkFDTDtBQUFDLGNBOUNQO0FBQUUsRUE4Q3VCLGlCQUFpQjtBQUN6QyxTQURZLEdBQUc7QUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmFQcm9wZXJ0eSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgVWlkXG4gKiBAZGVzY3JpcHRpb25cbiAqIEdldCB1bmlxdWUgaWRlbnRpZmllcnM6IFVVSUQsIElNRUksIElNU0ksIElDQ0lEIGFuZCBNQUMuXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBVaWQgfSBmcm9tICdAaW9uaWMtbmF0aXZlL3VpZC9uZ3gnO1xuICogaW1wb3J0IHsgQW5kcm9pZFBlcm1pc3Npb25zIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9hbmRyb2lkLXBlcm1pc3Npb25zL25neCc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSB1aWQ6IFVpZCwgcHJpdmF0ZSBhbmRyb2lkUGVybWlzc2lvbnM6IEFuZHJvaWRQZXJtaXNzaW9ucykgeyB9XG4gKlxuICpcbiAqIGFzeW5jIGdldEltZWkoKSB7XG4gKiAgY29uc3QgeyBoYXNQZXJtaXNzaW9uIH0gPSBhd2FpdCB0aGlzLmFuZHJvaWRQZXJtaXNzaW9ucy5jaGVja1Blcm1pc3Npb24oXG4gKiAgICB0aGlzLmFuZHJvaWRQZXJtaXNzaW9ucy5QRVJNSVNTSU9OLlJFQURfUEhPTkVfU1RBVEVcbiAqICApO1xuICpcbiAqICBpZiAoIWhhc1Blcm1pc3Npb24pIHtcbiAqICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuYW5kcm9pZFBlcm1pc3Npb25zLnJlcXVlc3RQZXJtaXNzaW9uKFxuICogICAgICB0aGlzLmFuZHJvaWRQZXJtaXNzaW9ucy5QRVJNSVNTSU9OLlJFQURfUEhPTkVfU1RBVEVcbiAqICAgICk7XG4gKlxuICogICAgaWYgKCFyZXN1bHQuaGFzUGVybWlzc2lvbikge1xuICogICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Blcm1pc3Npb25zIHJlcXVpcmVkJyk7XG4gKiAgICB9XG4gKlxuICogICAgLy8gb2ssIGEgdXNlciBnYXZlIHVzIHBlcm1pc3Npb24sIHdlIGNhbiBnZXQgaGltIGlkZW50aWZpZXJzIGFmdGVyIHJlc3RhcnQgYXBwXG4gKiAgICByZXR1cm47XG4gKiAgfVxuICpcbiAqICAgcmV0dXJuIHRoaXMudWlkLklNRUlcbiAqIH1cbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1VpZCcsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLXVpZCcsXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy51aWQnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2xpb25lbGhlL2NvcmRvdmEtcGx1Z2luLXVpZCcsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJ10sXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFVpZCBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqIEdldCB0aGUgZGV2aWNlIFVuaXZlcnNhbGx5IFVuaXF1ZSBJZGVudGlmaWVyIChVVUlEKS4gKi9cbiAgQENvcmRvdmFQcm9wZXJ0eSgpXG4gIFVVSUQ6IHN0cmluZztcblxuICAvKiogR2V0IHRoZSBkZXZpY2UgSW50ZXJuYXRpb25hbCBNb2JpbGUgU3RhdGlvbiBFcXVpcG1lbnQgSWRlbnRpdHkgKElNRUkpLiAqL1xuICBAQ29yZG92YVByb3BlcnR5KClcbiAgSU1FSTogc3RyaW5nO1xuXG4gIC8qKiBHZXQgdGhlIGRldmljZSBJbnRlcm5hdGlvbmFsIG1vYmlsZSBTdWJzY3JpYmVyIElkZW50aXR5IChJTVNJKS4gKi9cbiAgQENvcmRvdmFQcm9wZXJ0eSgpXG4gIElNU0k6IHN0cmluZztcblxuICAvKiogR2V0IHRoZSBzaW0gSW50ZWdyYXRlZCBDaXJjdWl0IENhcmQgSWRlbnRpZmllciAoSUNDSUQpLiAqL1xuICBAQ29yZG92YVByb3BlcnR5KClcbiAgSUNDSUQ6IHN0cmluZztcblxuICAvKiogR2V0IHRoZSBNZWRpYSBBY2Nlc3MgQ29udHJvbCBhZGRyZXNzIChNQUMpLiAqL1xuICBAQ29yZG92YVByb3BlcnR5KClcbiAgTUFDOiBzdHJpbmc7XG59XG4iXX0=